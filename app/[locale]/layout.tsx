//#ts-ignore

import "./globals.css";
import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import ReduxProvider from "@/store/provider";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "AI-Tutor",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
  params,
}: Readonly<{
  children: React.ReactNode;
  params: Promise<{ locale: string }>;
}>) {
  
  const { locale } = await params;
  
  // try {
  //   messages = (await import(`../../messages/${locale}.json`)).default;
  // } catch (error) {
  //   if (locale !== 'en') {
  //     console.error(`Locale messages not found for ${locale}:`, error);
  //     notFound();
  //   }
  //   messages = (await import(`../../messages/en.json`)).default;
  // }

  return (
    <html lang={locale}>
      <head>
        <link rel="icon" href="/chatbot.jpg" />
      </head>
      <body
        className={`${geistSans.variable} ${geistMono.variable}`}
        suppressHydrationWarning
      >
        {/* <NextIntlClientProvider locale={locale} messages={messages}> */}
    {/* //    <LanguageSwitcher /> */}
          <ReduxProvider>{children}</ReduxProvider>
        {/* </NextIntlClientProvider> */}
      </body>
    </html>
  );
}